!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ETHER_ADDR_LEN	grabPackage.cpp	12;"	d	file:
ETHER_ADDR_LEN	sniff_ethernet.h	5;"	d
IP_DF	grabPackage.cpp	15;"	d	file:
IP_DF	sniff_ip.h	16;"	d
IP_HL	grabPackage.cpp	18;"	d	file:
IP_MF	grabPackage.cpp	16;"	d	file:
IP_MF	sniff_ip.h	17;"	d
IP_OFFMASK	grabPackage.cpp	17;"	d	file:
IP_OFFMASK	sniff_ip.h	18;"	d
IP_RF	grabPackage.cpp	14;"	d	file:
IP_RF	sniff_ip.h	15;"	d
IP_V	grabPackage.cpp	19;"	d	file:
SIZE_ETHERNET	grabPackage.cpp	33;"	d	file:
TH_ACK	grabPackage.cpp	26;"	d	file:
TH_ACK	sniff_tcp.h	23;"	d
TH_CWR	grabPackage.cpp	29;"	d	file:
TH_CWR	sniff_tcp.h	26;"	d
TH_ECE	grabPackage.cpp	28;"	d	file:
TH_ECE	sniff_tcp.h	25;"	d
TH_FIN	grabPackage.cpp	22;"	d	file:
TH_FIN	sniff_tcp.h	19;"	d
TH_FLAGS	grabPackage.cpp	30;"	d	file:
TH_FLAGS	sniff_tcp.h	27;"	d
TH_OFF	grabPackage.cpp	21;"	d	file:
TH_OFF	sniff_tcp.h	17;"	d
TH_PUSH	grabPackage.cpp	25;"	d	file:
TH_PUSH	sniff_tcp.h	22;"	d
TH_RST	grabPackage.cpp	24;"	d	file:
TH_RST	sniff_tcp.h	21;"	d
TH_SYN	grabPackage.cpp	23;"	d	file:
TH_SYN	sniff_tcp.h	20;"	d
TH_URG	grabPackage.cpp	27;"	d	file:
TH_URG	sniff_tcp.h	24;"	d
ether_dhost	sniff_ethernet.h	/^    u_char ether_dhost[ETHER_ADDR_LEN]; \/* Destination host address *\/$/;"	m	class:sniff_ethernet
ether_shost	sniff_ethernet.h	/^    u_char ether_shost[ETHER_ADDR_LEN]; \/* Source host address *\/$/;"	m	class:sniff_ethernet
ether_type	sniff_ethernet.h	/^    u_short ether_type; \/* IP? ARP? RARP? etc *\/$/;"	m	class:sniff_ethernet
ethernet	grabPackage.cpp	/^const struct sniff_ethernet *ethernet; \/\/ The ethernet header \/\/$/;"	v	typeref:struct:sniff_ethernet
got_packet	grabPackage.cpp	/^void got_packet(u_char *args, const struct pcap_pkthdr *header, const u_char *packet)$/;"	f
ip	grabPackage.cpp	/^const struct sniff_ip *ip; \/\/ The IP header \/\/$/;"	v	typeref:struct:sniff_ip
ip_dst	sniff_ip.h	/^    struct in_addr ip_src,ip_dst; \/* source and dest address *\/$/;"	m	class:sniff_ip	typeref:struct:sniff_ip::
ip_id	sniff_ip.h	/^    u_short ip_id;      \/* identification *\/$/;"	m	class:sniff_ip
ip_len	sniff_ip.h	/^    u_short ip_len;     \/* total length *\/$/;"	m	class:sniff_ip
ip_off	sniff_ip.h	/^    u_short ip_off;     \/* fragment offset field *\/$/;"	m	class:sniff_ip
ip_p	sniff_ip.h	/^    u_char ip_p;        \/* protocol *\/$/;"	m	class:sniff_ip
ip_src	sniff_ip.h	/^    struct in_addr ip_src,ip_dst; \/* source and dest address *\/$/;"	m	class:sniff_ip	typeref:struct:sniff_ip::in_addr
ip_sum	sniff_ip.h	/^    u_short ip_sum;     \/* checksum *\/$/;"	m	class:sniff_ip
ip_tos	sniff_ip.h	/^    u_char ip_tos;      \/* type of service *\/$/;"	m	class:sniff_ip
ip_ttl	sniff_ip.h	/^    u_char ip_ttl;      \/* time to live *\/$/;"	m	class:sniff_ip
ip_vhl	sniff_ip.h	/^    u_char ip_vhl;      \/* version << 4 | header length >> 2 *\/$/;"	m	class:sniff_ip
main	grabPackage.cpp	/^int main(int argc, char *argv[])$/;"	f
payload	grabPackage.cpp	/^const char *payload; \/* Packet payload *\/$/;"	v
pcapDev	grabPackage.cpp	/^void pcapDev()$/;"	f
pcapFile	grabPackage.cpp	/^void pcapFile(string source)$/;"	f
raw	grabPackage.cpp	/^ofstream raw, rawtime;$/;"	v
rawtime	grabPackage.cpp	/^ofstream raw, rawtime;$/;"	v
size_ip	grabPackage.cpp	/^u_int size_ip;$/;"	v
size_tcp	grabPackage.cpp	/^u_int size_tcp;$/;"	v
sniff_ethernet	sniff_ethernet.h	/^class sniff_ethernet$/;"	c
sniff_ip	sniff_ip.h	/^class sniff_ip$/;"	c
sniff_tcp	sniff_tcp.h	/^class sniff_tcp$/;"	c
tcp	grabPackage.cpp	/^const struct sniff_tcp *tcp; \/\/ The TCP header \/\/$/;"	v	typeref:struct:sniff_tcp
tcp_seq	sniff_tcp.h	/^typedef u_int tcp_seq;$/;"	t
th_ack	sniff_tcp.h	/^    tcp_seq th_ack;     \/* acknowledgement number *\/$/;"	m	class:sniff_tcp
th_dport	sniff_tcp.h	/^    u_short th_dport;   \/* destination port *\/$/;"	m	class:sniff_tcp
th_flags	sniff_tcp.h	/^    u_char th_flags;$/;"	m	class:sniff_tcp
th_offx2	sniff_tcp.h	/^    u_char th_offx2;    \/* data offset, rsvd *\/$/;"	m	class:sniff_tcp
th_seq	sniff_tcp.h	/^    tcp_seq th_seq;     \/* sequence number *\/$/;"	m	class:sniff_tcp
th_sport	sniff_tcp.h	/^    u_short th_sport;   \/* source port *\/$/;"	m	class:sniff_tcp
th_sum	sniff_tcp.h	/^    u_short th_sum;     \/* checksum *\/$/;"	m	class:sniff_tcp
th_urp	sniff_tcp.h	/^    u_short th_urp;     \/* urgent pointer *\/$/;"	m	class:sniff_tcp
th_win	sniff_tcp.h	/^    u_short th_win;     \/* window *\/$/;"	m	class:sniff_tcp
